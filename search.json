[{"path":"http://heike.github.io/gglogo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Heike Hofmann. Author. Eric Hare. Author, maintainer. GGobi Foundation. Author.","code":""},{"path":"http://heike.github.io/gglogo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hofmann H, Hare E, GGobi Foundation (2024). gglogo: Geom Logo Sequence Plots. R package version 0.1.5, http://heike.github.io/gglogo/, https://github.com/heike/gglogo.","code":"@Manual{,   title = {gglogo: Geom for Logo Sequence Plots},   author = {Heike Hofmann and Eric Hare and {GGobi Foundation}},   year = {2024},   note = {R package version 0.1.5, http://heike.github.io/gglogo/},   url = {https://github.com/heike/gglogo}, }"},{"path":"http://heike.github.io/gglogo/index.html","id":"installation","dir":"","previous_headings":"","what":"Geom for Logo Sequence Plots","title":"Geom for Logo Sequence Plots","text":"gglogo available CRAN (version 0.1.4): development version available Github (0.1.9000):","code":"install.packages(\"gglogo\") # install.packages(\"devtools\") devtools::install_github(\"heike/gglogo\", build_vignettes = TRUE)"},{"path":"http://heike.github.io/gglogo/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Geom for Logo Sequence Plots","text":"Load library Load dataset containing set peptide sequences Now plot sequences (n almost) traditional sequence plot, Shannon information shown y axis.  (Sequence) Logo plots (Schneider & Stephens 1990) typically used bioinformatics way visually demonstrate well sequence nucleotides amino acids preserved certain region. cognitively better version plot default, .e. without specifying position parameter, plot defaults aligning largest contributor position along y axis showing variants position tail hanging axis. Longer tails indicate variability position.","code":"library(gglogo) data(sequences) head(sequences) ##                                peptide  class ## 1 RWTHLASGRTYNYKFNPPKQYGKDDITGEDLIQRED gram - ## 2 RWTHLNSGRTYHYKFNPPKVHGVDDVTGEPLVQRED gram - ## 3 RWTHLASGRTYNYKFNPPKQYGKDDITGEDLIQRED gram - ## 4 RWTHLASGRTYNYKFNPPKQYGKDDITGEDLIQRED gram - ## 5 RLIHQPSGRSYHEEFNPPKEPMKDDVTGEPLIRRSD gram - ## 6 RRVHPGSGRVYHVVYNPPKVEGKDDETGEELIVRAD gram - library(ggplot2) ggplot(data = ggfortify(sequences, peptide, method=\"shannon\")) +         geom_logo(aes(x = position, y = info, group = element,       label = element, fill = interaction(Polarity, Water)),      alpha = 0.6, position = \"classic\")  +   scale_fill_brewer(\"Amino Acid\\nproperties\", palette = \"Paired\") +   theme(legend.position = \"bottom\") ggplot(data = ggfortify(sequences, peptide, method=\"shannon\")) +         geom_logo(aes(x = position, y = info, group = element,       label = element, fill = interaction(Polarity, Water)),      alpha = 0.6)  +   scale_fill_brewer(\"Amino Acid\\nproperties\", palette = \"Paired\") +   theme(legend.position = \"bottom\")"},{"path":"http://heike.github.io/gglogo/index.html","id":"other-variants","dir":"","previous_headings":"","what":"Other variants","title":"Geom for Logo Sequence Plots","text":"Besides Shannon information, also visualize frequencies peptides position. can either set method = frequency, calculate (relative) frequency information :  Using classic variant alignment results stacked barchart amino acids position:","code":"ggplot(data = ggfortify(sequences, peptide, method=\"shannon\")) +         geom_logo(aes(x = position, y = freq/total, group = element,       label = element, fill = interaction(Polarity, Water)),      alpha = 0.6)  +   scale_fill_brewer(\"Amino Acid\\nproperties\", palette = \"Paired\") +   theme(legend.position = \"bottom\") ggplot(data = ggfortify(sequences, peptide, method=\"shannon\")) +         geom_logo(aes(x = position, y = info, group = element,       label = element, fill = interaction(Polarity, Water)),      alpha = 0.6, position=\"classic\")  +   scale_fill_brewer(\"Amino Acid\\nproperties\", palette = \"Paired\") +   theme(legend.position = \"bottom\")"},{"path":"http://heike.github.io/gglogo/index.html","id":"implementation-details","dir":"","previous_headings":"","what":"Implementation details","title":"Geom for Logo Sequence Plots","text":"implementation sequence logos two-step process data prepping/wrangling followed visualization. data prepping happens function ggfortify: sequences specifies variable sequences data set, treatment (list) grouping variables (Shannon) information calculated position. peptide sequences, data set aacids used provide additional information properties. specifying treatment parameter, corresponding information methods now calculated treatments well, can assess variability/conservation sequence treatment:","code":"library(dplyr)  seq_info <- sequences %>%     # data pipeline for processing   ggfortify(     peptide, # variable in which the sequences are stored     treatment = class,     method = \"shannon\",     missing_encode = c(\".\", \"*\", NA)   ) head(seq_info) ##   element  class position freq total        info        bits  Polarity ## 1       A gram -       13    2   923 0.003900781 0.003900781 non-polar ## 2       A gram -       30   31   923 0.083595755 0.083595755 non-polar ## 3       A gram +       16   33   886 0.076015635 0.076015635 non-polar ## 4       A gram -       35  135   923 0.235541625 0.235541625 non-polar ## 5       A gram +       33    2   886 0.006471744 0.006471744 non-polar ## 6       A gram -       17   27   923 0.115479912 0.115479912 non-polar ##         Water ## 1 hydrophobic ## 2 hydrophobic ## 3 hydrophobic ## 4 hydrophobic ## 5 hydrophobic ## 6 hydrophobic seq_info %>%   ggplot() +    geom_logo(aes(x = class, y = info, group = element,       label = element, fill = interaction(Polarity, Water)),      alpha = 0.6, position=\"classic\")  +   scale_fill_brewer(\"Amino Acid\\nproperties\", palette = \"Paired\") +   theme(legend.position = \"bottom\") +   facet_wrap(~position, ncol = 12)"},{"path":"http://heike.github.io/gglogo/index.html","id":"available-alphabets","dir":"","previous_headings":"","what":"Available alphabets","title":"Geom for Logo Sequence Plots","text":"default, font used logo plots Helvetica, available dataset alphabet. letter implemented form polygon x y coordinates. variable group contains corresponding letter.  Besides default alphabet, fonts Comic Sans, xkcd, braille (3d printing) implemented:","code":"alphabet %>%   filter(group == \"B\") %>%    ggplot(aes(x = x, y = y)) + geom_polygon() +    theme(aspect.ratio = 1) alphabet_comic %>%    filter(group %in% c(LETTERS, 0:9)) %>%   ggplot(aes(x = x, y = y)) + geom_polygon() +    theme(aspect.ratio = 1) + facet_wrap(~group, ncol = 11) +    ggtitle(\"Comic Sans\") alphabet_xkcd %>%    dplyr::filter(group %in% c(LETTERS, 0:9)) %>%   ggplot(aes(x = x, y = y)) + geom_polygon() +    theme(aspect.ratio = 1) + facet_wrap(~group, ncol = 11) +    ggtitle(\"xkcd font\") alphabet_braille %>%    dplyr::filter(group %in% c(LETTERS, 0:9)) %>%   ggplot(aes(x = x, y = y)) + geom_polygon() +    theme(aspect.ratio = 1) + facet_wrap(~group, ncol = 11) +    ggtitle(\"Braille (use in 3d prints)\")"},{"path":"http://heike.github.io/gglogo/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Geom for Logo Sequence Plots","text":"Schneider, TD, Stephens, RM (1990). Sequence logos: new way display consensus sequences. Nucleic Acids Res, 18, 20:6097-100.","code":""},{"path":"http://heike.github.io/gglogo/reference/aacids.html","id":null,"dir":"Reference","previous_headings":"","what":"properties of amino acids — aacids","title":"properties of amino acids — aacids","text":"properties amino acids: polarity water affiliation","code":""},{"path":"http://heike.github.io/gglogo/reference/aacids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"properties of amino acids — aacids","text":"","code":"data(aacids)"},{"path":"http://heike.github.io/gglogo/reference/aacids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"properties of amino acids — aacids","text":"Amino acid properties","code":""},{"path":"http://heike.github.io/gglogo/reference/alphabet.html","id":null,"dir":"Reference","previous_headings":"","what":"alphabet polygon data — alphabet","title":"alphabet polygon data — alphabet","text":"polygons upper lower case letters digits 0-9","code":""},{"path":"http://heike.github.io/gglogo/reference/alphabet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alphabet polygon data — alphabet","text":"","code":"data(alphabet)  data(alphabet_comic)  data(alphabet_xkcd)  data(alphabet_braille)"},{"path":"http://heike.github.io/gglogo/reference/alphabet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alphabet polygon data — alphabet","text":"alphabet polygon data alphabet polygon data based font Helvetica. Upper lower case letters included well digits. alphabet data `alphabet_comic` (based Comic Sans MS), `alphabet_xkcd` (based xkcd font),  `alphabet_braille` (based Swell Braille)","code":""},{"path":"http://heike.github.io/gglogo/reference/calcInformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute shannon information based on position and treatment — calcInformation","title":"Compute shannon information based on position and treatment — calcInformation","text":"Compute shannon information based position treatment","code":""},{"path":"http://heike.github.io/gglogo/reference/calcInformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute shannon information based on position and treatment — calcInformation","text":"","code":"calcInformation(   dframe,   pos,   elems,   trt = NULL,   weight = NULL,   k = 4,   method = \"shannon\" )"},{"path":"http://heike.github.io/gglogo/reference/calcInformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute shannon information based on position and treatment — calcInformation","text":"dframe data frame peptide () sequences treatment factors pos variable containing position elems variable containing elements trt (vector ) character string(s) treatment information weight variable containing number times sequence observed, defaults 1 case weight given k alphabet size: 4 DNA/RNA sequences, 21 standard amino acids method either \"shannon\" \"frequency\" Shannon information relative frequency element position.","code":""},{"path":"http://heike.github.io/gglogo/reference/calcInformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute shannon information based on position and treatment — calcInformation","text":"extended data frame frequency (Shanon) bits. results requested method found variable `info`.","code":""},{"path":"http://heike.github.io/gglogo/reference/calcInformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute shannon information based on position and treatment — calcInformation","text":"","code":"data(sequences) dm2 <- splitSequence(sequences, peptide) dm3 <- calcInformation(dm2, pos = position, elems = element, trt = class, k = 21) # precursor to a logo plot: library(ggplot2) #>  #> Attaching package: ‘ggplot2’ #> The following object is masked from ‘package:gglogo’: #>  #>     fortify # library(biovizBase)"},{"path":"http://heike.github.io/gglogo/reference/createPolygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data set of polygons for a set of letters from a specified fontfamily — createPolygons","title":"Create a data set of polygons for a set of letters from a specified fontfamily — createPolygons","text":"Create data set polygons set letters specified fontfamily","code":""},{"path":"http://heike.github.io/gglogo/reference/createPolygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data set of polygons for a set of letters from a specified fontfamily — createPolygons","text":"","code":"createPolygons(letters, font, fontsize = 400, dim = c(720, 720), scale = FALSE)"},{"path":"http://heike.github.io/gglogo/reference/createPolygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data set of polygons for a set of letters from a specified fontfamily — createPolygons","text":"letters set characters polygons created font character describing name font - use e.g command `extrafont::fonts()` check available fonts installing fonts. fontsize size letter created - larger means higher resolution, also bigger result sets dim dimensions box created letter supposed fit scale scale values along y axis use result geom_logo","code":""},{"path":"http://heike.github.io/gglogo/reference/createPolygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data set of polygons for a set of letters from a specified fontfamily — createPolygons","text":"data set compatible work geom_logo","code":""},{"path":"http://heike.github.io/gglogo/reference/createPolygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data set of polygons for a set of letters from a specified fontfamily — createPolygons","text":"","code":"# \\donttest{ # check that all letters and digits are nicely shaped: new_alphabet <- createPolygons(c(\"f\", \"g\", \"W\", \"*\"), font=\"Garamond\")  library(ggplot2) qplot(x,y, geom=\"polygon\", data=new_alphabet, facets=~group) #> Warning: `qplot()` was deprecated in ggplot2 3.4.0.  # }"},{"path":"http://heike.github.io/gglogo/reference/determineOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine order in which to pass through a set of points — determineOrder","title":"Determine order in which to pass through a set of points — determineOrder","text":"Greedy algorithm connect points, idea point connected line two points closest , yet connected shape. Results depend starting point.","code":""},{"path":"http://heike.github.io/gglogo/reference/determineOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine order in which to pass through a set of points — determineOrder","text":"","code":"determineOrder(x, y)"},{"path":"http://heike.github.io/gglogo/reference/determineOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine order in which to pass through a set of points — determineOrder","text":"x x coordinates y y coordinates","code":""},{"path":"http://heike.github.io/gglogo/reference/determineOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine order in which to pass through a set of points — determineOrder","text":"vector indices ordered traversion along border","code":""},{"path":"http://heike.github.io/gglogo/reference/fortify.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert image matrix to a data frame — fortify","title":"Convert image matrix to a data frame — fortify","text":"S3 method create data frame 3d array.","code":""},{"path":"http://heike.github.io/gglogo/reference/fortify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert image matrix to a data frame — fortify","text":"","code":"fortify(model, data, ...)  # S3 method for default fortify(model, data, ...)"},{"path":"http://heike.github.io/gglogo/reference/fortify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert image matrix to a data frame — fortify","text":"model array e.g. returned readJPEG data used method ... used method","code":""},{"path":"http://heike.github.io/gglogo/reference/fortify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert image matrix to a data frame — fortify","text":"data frame x x coordinate pixels y y coordinate pixels (usually negative) red number vector (0,1) describing amount red pixel RGB model green number vector (0,1) describing amount green pixel RGB model blue number vector (0,1) describing amount blue pixel RGB model","code":""},{"path":"http://heike.github.io/gglogo/reference/geom_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence logo plots. — GeomLogo","title":"Sequence logo plots. — GeomLogo","text":"Sequence logo plots.","code":""},{"path":"http://heike.github.io/gglogo/reference/geom_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence logo plots. — GeomLogo","text":"","code":"GeomLogo  geom_logo(   mapping = NULL,   data = NULL,   stat = \"logo\",   position = \"logo\",   show.legend = NA,   inherit.aes = TRUE,   width = 0.9,   alpha = 0.6,   na.rm = TRUE,   alphabet = NULL,   ... )"},{"path":"http://heike.github.io/gglogo/reference/geom_logo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sequence logo plots. — GeomLogo","text":"object class GeomLogo (inherits Geom, ggproto, gg) length 6.","code":""},{"path":"http://heike.github.io/gglogo/reference/geom_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence logo plots. — GeomLogo","text":"mapping aesthetic mapping, usually constructed aes aes_string. needs set layer level overriding plot defaults. data layer specific dataset - needed want override plot defaults, stat statistical transformation use data layer, position position adjustment use overlappling points layer, show.legend Whether show legend inherit.aes Whether inherit aes width maximum width letters, defaults 0.9, alpha amount alpha blending used putting letters top rectangle, defaults 0.25, na.rm Whether remove NAs alphabet Specifies alphabet used rendering logo. alphabet can dataframe (output createPolygons), character specifying font NULL. NULL, default alphabet set used (based Helvetica). Use output `createPolygons` generate alphabet polygons different font. ... arguments passed layer. can include aesthetics whose values want set, map. See layer details.","code":""},{"path":"http://heike.github.io/gglogo/reference/geom_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence logo plots. — GeomLogo","text":"","code":"# \\donttest{ library(ggplot2) data(sequences) ggplot(data = ggfortify(sequences, peptide)) +   geom_logo(aes(x=position, y=bits, group=element,      label=element, fill=interaction(Polarity, Water)),      alpha = 0.6)  +   scale_fill_brewer(palette=\"Paired\") +   theme(legend.position = \"bottom\") #> Warning: Using the `size` aesthetic with geom_rect was deprecated in ggplot2 3.4.0. #> ℹ Please use the `linewidth` aesthetic instead. #> Warning: Using the `size` aesthetic with geom_polygon was deprecated in ggplot2 3.4.0. #> ℹ Please use the `linewidth` aesthetic instead.   ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x=class, y=bits, group=element,      label=element, fill=element)) +   facet_wrap(~position, ncol=18) +   theme(legend.position = \"bottom\")   ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x=position, y=bits, group=element, label=element, fill=element)) +   facet_wrap(~class, ncol=1) + theme_bw()   ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x=class, y=bits, group=element,                 label=element, fill=interaction(Polarity, Water))) +   scale_fill_brewer(\"Amino-acids properties\", palette=\"Paired\") +   facet_wrap(~position, ncol=18) +   theme(legend.position=\"bottom\") +   xlab(\"\") + ylab(\"Shannon information in bits\")   # }"},{"path":"http://heike.github.io/gglogo/reference/getOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine boundary between foreground and background in an image — getOutline","title":"Determine boundary between foreground and background in an image — getOutline","text":"Determine boundary foreground background image","code":""},{"path":"http://heike.github.io/gglogo/reference/getOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine boundary between foreground and background in an image — getOutline","text":"","code":"getOutline(imdf, var = \"red\", threshold = 0.5)"},{"path":"http://heike.github.io/gglogo/reference/getOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine boundary between foreground and background in an image — getOutline","text":"imdf dataframe describing pixellated image x y. columns x, y, var var dimension along foreground background shape image well separated. Usually one 'red', 'green', 'blue', extended numerical variable. threshold value specifying cutoff along variable var. Values var higher threshold considered belong foreground.","code":""},{"path":"http://heike.github.io/gglogo/reference/getOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine boundary between foreground and background in an image — getOutline","text":"subset data frame imdf consisting just boundary points: x x coordinate pixels y y coordinate pixels (usually negative) red number vector (0,1) describing amount red pixel RGB model green number vector (0,1) describing amount green pixel RGB model blue number vector (0,1) describing amount blue pixel RGB model","code":""},{"path":"http://heike.github.io/gglogo/reference/ggfortify.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sequence data to a format suitable for logo plots — ggfortify","title":"Convert sequence data to a format suitable for logo plots — ggfortify","text":"Convert sequence data format suitable logo plots","code":""},{"path":"http://heike.github.io/gglogo/reference/ggfortify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sequence data to a format suitable for logo plots — ggfortify","text":"","code":"ggfortify(   data,   sequences,   treatment = NULL,   weight = NULL,   method = \"shannon\",   missing_encode = c(\".\") )"},{"path":"http://heike.github.io/gglogo/reference/ggfortify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sequence data to a format suitable for logo plots — ggfortify","text":"data data frame sequences sequences variable containing sequences treatment co-variate(s) used collecting sequence data weight numeric variable weights method either \"shannon\" \"frequency\" Shannon information relative frequency element position. missing_encode character value(s) signifies missing element sequence? defaults `.`.","code":""},{"path":"http://heike.github.io/gglogo/reference/ggfortify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sequence data to a format suitable for logo plots — ggfortify","text":"data frame position, element information value","code":""},{"path":"http://heike.github.io/gglogo/reference/ggfortify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sequence data to a format suitable for logo plots — ggfortify","text":"","code":"# \\donttest{ library(ggplot2) data(sequences)  ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x = class, y = bits, fill = Water, label = element)) +   facet_wrap(~position)   ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x = class, y = bits, fill = Polarity, label = element)) +   facet_wrap(~position, ncol = 18) +   theme(legend.position = \"bottom\")  # }"},{"path":"http://heike.github.io/gglogo/reference/identifyParts.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify different parts of a polygon — identifyParts","title":"Identify different parts of a polygon — identifyParts","text":"Identify different parts polygon","code":""},{"path":"http://heike.github.io/gglogo/reference/identifyParts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify different parts of a polygon — identifyParts","text":"","code":"identifyParts(data, tol = NULL)"},{"path":"http://heike.github.io/gglogo/reference/identifyParts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify different parts of a polygon — identifyParts","text":"data data frame coordinates x, y, order. tol numerical tolerance minimal distance groups. value specified, tolerace derived marginal frequencey break observed (squared) distances consecutive points.","code":""},{"path":"http://heike.github.io/gglogo/reference/identifyParts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify different parts of a polygon — identifyParts","text":"data frame group variable added input data","code":""},{"path":"http://heike.github.io/gglogo/reference/letterObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a text element into an R object — letterObject","title":"Convert a text element into an R object — letterObject","text":"Convert text element R object","code":""},{"path":"http://heike.github.io/gglogo/reference/letterObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a text element into an R object — letterObject","text":"","code":"letterObject(   ch,   fontfamily = \"Helvetica\",   fontsize = 576,   fontface = \"plain\",   dim = c(480, 480) )"},{"path":"http://heike.github.io/gglogo/reference/letterObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a text element into an R object — letterObject","text":"ch text converted, usually just single letter fontfamily R default fonts always available, e.g. Helvetica, Arial, Courier New, Garamond. fonts might available depending platform used. fontsize default 576. resulting string exceeds boundary matrix returned, reduced font size fontface character value. Defaults 'plain'. standard options 'bold', 'italic', 'bold italic'. font families supports additional font faces. dim vector length two specifying width height (pixels) temporary jpg file created letter. Defaults 480 x 480 pixels.","code":""},{"path":"http://heike.github.io/gglogo/reference/letterObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a text element into an R object — letterObject","text":"three dimensional matrix dimension 480 x 480 x 3 pixel values, black background white letter","code":""},{"path":"http://heike.github.io/gglogo/reference/letterObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a text element into an R object — letterObject","text":"","code":"# \\donttest{ plot(letterObject(\"g\", fontfamily=\"Times New Roman\", fontsize=400))  plot(letterObject(\"q\", fontsize=400))  plot(letterObject(\"B\"))  # }"},{"path":"http://heike.github.io/gglogo/reference/letterToPolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an image file to a polygon — letterToPolygon","title":"Convert an image file to a polygon — letterToPolygon","text":"Convert image file polygon","code":""},{"path":"http://heike.github.io/gglogo/reference/letterToPolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an image file to a polygon — letterToPolygon","text":"","code":"letterToPolygon(   ch,   fontfamily = \"Helvetica\",   fontsize = 576,   tol = 1,   dim = c(480, 480),   threshold = 0.5,   var = \"red\" )"},{"path":"http://heike.github.io/gglogo/reference/letterToPolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an image file to a polygon — letterToPolygon","text":"ch letter fontfamily R default fonts always available, e.g. Helvetica, Arial, Courier New, Garamond. fonts might available depending platform used. fontsize default 576. resulting string exceeds boundary matrix returned, reduced font size tol tolerance dim vector length two specifying width height (pixels) temporary jpg file created letter. Defaults 480 x 480 pixels. threshold numerical cutoff 0 1 var one \"red\", \"green\", \"blue\".","code":""},{"path":"http://heike.github.io/gglogo/reference/letterToPolygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an image file to a polygon — letterToPolygon","text":"","code":"library(ggplot2) letter <- letterToPolygon(\"R\", fontfamily=\"Helvetica\") qplot(x, y, geom=\"polygon\", data = letter, fill=I(\"black\"), alpha=I(0.8))+      coord_equal()"},{"path":"http://heike.github.io/gglogo/reference/logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Logo plot — logo","title":"Logo plot — logo","text":"Simple logo plot sequences. complicated sequence logos, treatment comparisons subsets see geom_logo.","code":""},{"path":"http://heike.github.io/gglogo/reference/logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logo plot — logo","text":"","code":"logo(sequences)"},{"path":"http://heike.github.io/gglogo/reference/logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logo plot — logo","text":"sequences vector text sequences, consensus logo shown","code":""},{"path":"http://heike.github.io/gglogo/reference/logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logo plot — logo","text":"ggplot2 object simple sequence","code":""},{"path":"http://heike.github.io/gglogo/reference/logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logo plot — logo","text":"","code":"data(sequences) library(ggplot2) library(RColorBrewer) cols <- rep(brewer.pal(12, name=\"Paired\"),22) logo(sequences$peptide) + aes(fill=element) + scale_fill_manual(values=cols)"},{"path":"http://heike.github.io/gglogo/reference/mainPlusIslands.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the orientation of a polygon — mainPlusIslands","title":"Set the orientation of a polygon — mainPlusIslands","text":"Set orientation polygon","code":""},{"path":"http://heike.github.io/gglogo/reference/mainPlusIslands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the orientation of a polygon — mainPlusIslands","text":"","code":"mainPlusIslands(imdf)"},{"path":"http://heike.github.io/gglogo/reference/mainPlusIslands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the orientation of a polygon — mainPlusIslands","text":"imdf dataframe describing pixellated image x y. columns x, y, group","code":""},{"path":"http://heike.github.io/gglogo/reference/mainPlusIslands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the orientation of a polygon — mainPlusIslands","text":"reordered version data frame imdf consistent assumption group 1 main outline groups cutouts","code":""},{"path":"http://heike.github.io/gglogo/reference/point_line_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance between point and line — point_line_dist","title":"Distance between point and line — point_line_dist","text":"Compute distance point given (px, py) line spanned points (lx1, ly1) (lx2, ly2). http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html","code":""},{"path":"http://heike.github.io/gglogo/reference/point_line_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance between point and line — point_line_dist","text":"","code":"point_line_dist(px, py, lx_1, ly_1, lx_2, ly_2)"},{"path":"http://heike.github.io/gglogo/reference/point_line_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance between point and line — point_line_dist","text":"px x coordinate  point outside py y coordinate  point lx_1, x  coordinate 1st point spanning line ly_1, y  coordinate 1st point spanning line lx_2, x  coordinate 2nd point spanning line ly_2, y  coordinate 2nd point spanning line","code":""},{"path":"http://heike.github.io/gglogo/reference/position_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Logo positioning for overlapping objects on top of one another. — position_logo","title":"Logo positioning for overlapping objects on top of one another. — position_logo","text":"position_classic stacking objects ordered fashion largest smallest element, position_logo reverses classic order additionally shifts stacks downward align largest objects along vertical minimum, position_fill additionally standardises stack unit height.","code":""},{"path":"http://heike.github.io/gglogo/reference/position_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logo positioning for overlapping objects on top of one another. — position_logo","text":"","code":"position_logo()  position_classic()"},{"path":[]},{"path":"http://heike.github.io/gglogo/reference/position_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logo positioning for overlapping objects on top of one another. — position_logo","text":"","code":"# \\donttest{ library(ggplot2) data(sequences)  # to make the most of comparisons, largest letters ar aligned along their minimum to # work out the main sequence. ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x = class, y = bits, fill = Water, label = element), position=\"logo\") +   facet_wrap(~position)   # in the classic logo plots letters are stacked in an ordered fasahion on top of each other ggplot(data = ggfortify(sequences, peptide, treatment = class)) +   geom_logo(aes(x = class, y = bits, fill = Water, label = element), position=\"classic\") +   facet_wrap(~position)  # }"},{"path":"http://heike.github.io/gglogo/reference/sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"peptide sequence data — sequences","title":"peptide sequence data — sequences","text":"sequences showing amino acid usage adenylate kinase lid available biovis redesign contest 2013, see http://biovis.net/year/2013/info/redesign-contest published Wong, B. Nat Methods 7, 889 (2011)","code":""},{"path":"http://heike.github.io/gglogo/reference/sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"peptide sequence data — sequences","text":"","code":"data(sequences)"},{"path":"http://heike.github.io/gglogo/reference/sequences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"peptide sequence data — sequences","text":"Sequence data","code":""},{"path":"http://heike.github.io/gglogo/reference/simplifyPolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Douglas-Peucker algorithm adjusted fo polyons — simplifyPolygon","title":"Douglas-Peucker algorithm adjusted fo polyons — simplifyPolygon","text":"Implementation Douglas-Peucker algorithm line thinning http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm","code":""},{"path":"http://heike.github.io/gglogo/reference/simplifyPolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Douglas-Peucker algorithm adjusted fo polyons — simplifyPolygon","text":"","code":"simplifyPolygon(points, tol = 1)"},{"path":"http://heike.github.io/gglogo/reference/simplifyPolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Douglas-Peucker algorithm adjusted fo polyons — simplifyPolygon","text":"points matrix x y points tol tolerance","code":""},{"path":"http://heike.github.io/gglogo/reference/simplify_rec.html","id":null,"dir":"Reference","previous_headings":"","what":"Douglas Pecker algorithm for line thinning — simplify_rec","title":"Douglas Pecker algorithm for line thinning — simplify_rec","text":"Implementation Douglas-Peucker algorithm line thinning http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm","code":""},{"path":"http://heike.github.io/gglogo/reference/simplify_rec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Douglas Pecker algorithm for line thinning — simplify_rec","text":"","code":"simplify_rec(points, tol = 0.01)"},{"path":"http://heike.github.io/gglogo/reference/simplify_rec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Douglas Pecker algorithm for line thinning — simplify_rec","text":"points matrix x y points tol tolerance","code":""},{"path":"http://heike.github.io/gglogo/reference/splitSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape data set according to elements in sequences — splitSequence","title":"Reshape data set according to elements in sequences — splitSequence","text":"prepare data set plotting logo","code":""},{"path":"http://heike.github.io/gglogo/reference/splitSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape data set according to elements in sequences — splitSequence","text":"","code":"splitSequence(dframe, sequences)"},{"path":"http://heike.github.io/gglogo/reference/splitSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape data set according to elements in sequences — splitSequence","text":"dframe data frame peptide () sequences treatment factors sequences column containing character vector (peptide) sequence","code":""},{"path":"http://heike.github.io/gglogo/reference/splitSequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape data set according to elements in sequences — splitSequence","text":"","code":"data(sequences) dm2 <- splitSequence(sequences, peptide)"},{"path":"http://heike.github.io/gglogo/reference/stat_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","title":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","text":"Calculation pieces necessary plot logo sequence plot","code":""},{"path":"http://heike.github.io/gglogo/reference/stat_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","text":"","code":"StatLogo  stat_logo(   mapping = NULL,   data = NULL,   geom = \"logo\",   position = \"logo\",   show.legend = NA,   inherit.aes = TRUE,   width = 0.9,   na.rm = TRUE,   ... )"},{"path":"http://heike.github.io/gglogo/reference/stat_logo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","text":"object class StatLogo (inherits Stat, ggproto, gg) length 4.","code":""},{"path":"http://heike.github.io/gglogo/reference/stat_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","text":"mapping aesthetic mapping, usually constructed aes aes_string. needs set layer level overriding plot defaults. data layer specific dataset - needed want override plot defaults, geom geometric object use display data, position position adjustment use overlappling points layer, show.legend Whether show legend inherit.aes Whether inherit aes width maximum width letters, defaults 0.9, na.rm Whether remove NAs ... arguments passed layer. can include aesthetics whose values want set, map. See layer details.","code":""},{"path":"http://heike.github.io/gglogo/reference/stat_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","text":"proto object proto object","code":""},{"path":"http://heike.github.io/gglogo/reference/stat_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of all pieces necessary to plot a logo sequence plot — StatLogo","text":"","code":"# See geom_logo for examples # Generate data data(sequences) library(ggplot2)  ggplot(data = ggfortify(sequences, peptide)) +   geom_logo(aes(x=position, y=bits, label=element,                 group=interaction(position, element)),             alpha=0.5)"},{"path":"http://heike.github.io/gglogo/news/index.html","id":"gglogo-014","dir":"Changelog","previous_headings":"","what":"gglogo 0.1.4","title":"gglogo 0.1.4","text":"CRAN release: 2019-06-28","code":""},{"path":[]},{"path":"http://heike.github.io/gglogo/news/index.html","id":"small-usage-changes-0-1-4","dir":"Changelog","previous_headings":"","what":"Small Usage Changes","title":"gglogo 0.1.4","text":"expanded documentation add parameter missing_encode ggfortify convert corresponding symbols sequences correctly NA","code":""},{"path":[]},{"path":"http://heike.github.io/gglogo/news/index.html","id":"gglogo-014-1","dir":"Changelog","previous_headings":"","what":"gglogo 0.1.4","title":"gglogo 0.1.4","text":"CRAN release: 2019-06-28","code":""},{"path":[]},{"path":[]},{"path":"http://heike.github.io/gglogo/news/index.html","id":"bug-fixes-0-1-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"gglogo 0.1.4","text":"check font exists avoid ungraceful quit","code":""},{"path":"http://heike.github.io/gglogo/news/index.html","id":"gglogo-013","dir":"Changelog","previous_headings":"","what":"gglogo 0.1.3","title":"gglogo 0.1.3","text":"CRAN release: 2017-02-17","code":""},{"path":[]},{"path":[]},{"path":"http://heike.github.io/gglogo/news/index.html","id":"other-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"Other changes","title":"gglogo 0.1.3","text":"updated work version 2.2.0 ggplot2","code":""}]
